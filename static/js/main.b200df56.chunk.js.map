{"version":3,"sources":["Searchbar/Searchbar.jsx","ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Modal/Modal.jsx","Loader/Loader.jsx","Button/Button.jsx","helpers/scroll.js","helpers/ApiService.js","App.js","index.js"],"names":["SearchBar","onSetQuery","onGetPictures","className","onSubmit","type","onInput","autoComplete","autoFocus","placeholder","name","ImageGalleryItem","onOpenModal","pictures","map","id","webformatURL","largeImageURL","tags","onClick","src","alt","data-source","ImageGallery","Modal","modalImg","onCloseModal","Loader","style","position","top","left","transform","color","height","width","Button","onLoadPictures","scrollGallery","elementClass","window","scrollTo","document","querySelector","scrollHeight","behavior","apiService","query","page","axios","method","url","App","state","isModalOpen","isLoad","handleSetQuery","e","setState","target","value","handleGetPictures","a","preventDefault","resp","data","hits","handleLoadMorePictures","prev","handleOpenModal","source","dataset","handleCloseModal","nodeName","this","length","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b200df56.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst SearchBar = ({onSetQuery, onGetPictures}) => (\r\n    <header className=\"Searchbar\">\r\n  <form className=\"SearchForm\" onSubmit={onGetPictures}>\r\n    <button type=\"submit\" className=\"SearchForm-button\">\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n      <input\r\n        onInput={onSetQuery}\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        name=\"query\"\r\n    />\r\n  </form>\r\n</header>\r\n)\r\n\r\nexport default SearchBar","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({onOpenModal, pictures }) => (\r\n  <>\r\n    {pictures.map(({id, webformatURL, largeImageURL, tags}) => (\r\n      <li key={id} className=\"ImageGalleryItem\">\r\n        <img onClick={onOpenModal} src={webformatURL}\r\n          alt={tags}\r\n          data-source={largeImageURL}\r\n          className=\"ImageGalleryItem-image\"\r\n/>\r\n      </li>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\"\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\"\r\n\r\n\r\nconst ImageGallery = ({onOpenModal, pictures}) => (\r\n    <ul className=\"ImageGallery\">\r\n        <ImageGalleryItem onOpenModal={onOpenModal} pictures={ pictures}/>\r\n</ul>\r\n)\r\n\r\nexport default ImageGallery","import React from \"react\"\r\n\r\nconst Modal = ({modalImg, onCloseModal}) => (\r\n  <div className=\"Overlay\" onClick={ onCloseModal}>\r\n  <div className=\"Modal\">\r\n    <img src={modalImg} alt=\"\" />\r\n  </div>\r\n</div>\r\n)\r\n\r\nexport default Modal","import React from \"react\"\r\nimport MyLoader from \"react-loader-spinner\"\r\n\r\nconst Loader = () => (\r\n    <MyLoader style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    }} type=\"Circles\" color=\"#00BFFF\" height={80} width={80}/>\r\n)\r\n\r\nexport default Loader","import React from \"react\"\r\n\r\nconst Button = ({onLoadPictures}) => <button onClick={onLoadPictures} className=\"Button\">Load More</button>\r\n\r\nexport default Button","function scrollGallery(elementClass) {\r\n    window.scrollTo({\r\n      top: document.querySelector(\".\" + elementClass).scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n}\r\n\r\nexport default scrollGallery;","import axios from \"axios\"\r\n\r\nconst apiService = (query, page) => {\r\n    return axios({\r\n        method: \"GET\",\r\n        url: `https://pixabay.com/api/?key=&key=15900106-2c235e732bb321ca7ec900d93&q=${query}&page=${page}&per_page=12`,\r\n    }) \r\n}\r\n\r\nexport default apiService;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport SearchBar from \"./Searchbar/Searchbar\";\r\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\r\nimport Modal from \"./Modal/Modal\";\r\nimport Loader from \"./Loader/Loader\";\r\nimport Button from \"./Button/Button\";\r\n// helpers\r\nimport scrollGallery from \"./helpers/scroll\"\r\nimport apiService from \"./helpers/ApiService\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: \"\",\r\n    page: 1,\r\n    pictures: [],\r\n    isModalOpen: false,\r\n    modalImg: \"\",\r\n    isLoad: false\r\n  };\r\n\r\n  handleSetQuery = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleGetPictures = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      page: 1,\r\n      isLoad: true\r\n    })\r\n    const { query, page } = this.state;\r\n    const resp = await apiService(query, page);\r\n    this.setState({\r\n      pictures: resp.data.hits,\r\n      page: 2,\r\n      isLoad: false\r\n    });\r\n  };\r\n\r\n  handleLoadMorePictures = async () => {\r\n    const { page, query } = this.state;\r\n    const {\r\n      data: { hits },\r\n    } = await apiService(query, page + 1);\r\n    this.setState((prev) => ({\r\n      pictures: [...prev.pictures, ...hits],\r\n      page: prev.page + 1,\r\n    }));\r\n    scrollGallery(\"ImageGallery\");\r\n  }\r\n\r\n  handleOpenModal = ({\r\n    target: {\r\n      dataset: { source },\r\n    },\r\n  }) => {\r\n    this.setState({\r\n      isModalOpen: true,\r\n      modalImg: source,\r\n    });\r\n  };\r\n\r\n  handleCloseModal = ({target: {nodeName}}) => {\r\n    if (nodeName !== \"IMG\") {\r\n      this.setState({\r\n        isModalOpen: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      state: { pictures, query, isModalOpen, modalImg, isLoad },\r\n      handleSetQuery,\r\n      handleGetPictures,\r\n      handleOpenModal,\r\n      handleCloseModal,\r\n      handleLoadMorePictures,\r\n    } = this;\r\n    return (\r\n      <div>\r\n        <SearchBar\r\n          onSetQuery={handleSetQuery}\r\n          query={query}\r\n          onGetPictures={handleGetPictures}\r\n        />\r\n        <ImageGallery onOpenModal={handleOpenModal} pictures={pictures} />\r\n        {pictures.length > 0 && (\r\n          <Button onLoadPictures={handleLoadMorePictures} />\r\n        )}\r\n        {isLoad && <Loader />}\r\n        {isModalOpen && (\r\n          <Modal onCloseModal={handleCloseModal} modalImg={modalImg} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}